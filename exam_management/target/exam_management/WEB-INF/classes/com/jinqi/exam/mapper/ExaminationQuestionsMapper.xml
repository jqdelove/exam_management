<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinqi.exam.dao.ExaminationQuestionsMapper" >
  <resultMap id="BaseResultMap" type="com.jinqi.exam.entity.ExaminationQuestions" >
    <id column="EXAMINATION_QUESTIONS_ID" property="examinationQuestionsId" jdbcType="INTEGER" />
    <result column="EXAMINATION_QUESTIONS_CONTENT" property="examinationQuestionsContent" jdbcType="VARCHAR" />
    <result column="EXAMINATION_QUESTIONS_ANSWER" property="examinationQuestionsAnswer" jdbcType="VARCHAR" />
    <result column="EXAMINATION_SELECT_1" property="examinationSelect1" jdbcType="VARCHAR" />
    <result column="EXAMINATION_SELECT_2" property="examinationSelect2" jdbcType="VARCHAR" />
    <result column="EXAMINATION_SELECT_3" property="examinationSelect3" jdbcType="VARCHAR" />
    <result column="EXAMINATION_SELECT_4" property="examinationSelect4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    EXAMINATION_QUESTIONS_ID, EXAMINATION_QUESTIONS_CONTENT, EXAMINATION_QUESTIONS_ANSWER, 
    EXAMINATION_SELECT_1, EXAMINATION_SELECT_2, EXAMINATION_SELECT_3, EXAMINATION_SELECT_4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.ExaminationQuestionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_EXAMINATION_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_EXAMINATION_QUESTIONS
    where EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_EXAMINATION_QUESTIONS
    where EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jinqi.exam.entity.ExaminationQuestionsExample" >
    delete from T_EXAMINATION_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jinqi.exam.entity.ExaminationQuestions" >
    insert into T_EXAMINATION_QUESTIONS (EXAMINATION_QUESTIONS_ID, EXAMINATION_QUESTIONS_CONTENT, 
      EXAMINATION_QUESTIONS_ANSWER, EXAMINATION_SELECT_1, 
      EXAMINATION_SELECT_2, EXAMINATION_SELECT_3, 
      EXAMINATION_SELECT_4)
    values (#{examinationQuestionsId,jdbcType=INTEGER}, #{examinationQuestionsContent,jdbcType=VARCHAR}, 
      #{examinationQuestionsAnswer,jdbcType=VARCHAR}, #{examinationSelect1,jdbcType=VARCHAR}, 
      #{examinationSelect2,jdbcType=VARCHAR}, #{examinationSelect3,jdbcType=VARCHAR}, 
      #{examinationSelect4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jinqi.exam.entity.ExaminationQuestions" >
    insert into T_EXAMINATION_QUESTIONS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examinationQuestionsId != null" >
        EXAMINATION_QUESTIONS_ID,
      </if>
      <if test="examinationQuestionsContent != null" >
        EXAMINATION_QUESTIONS_CONTENT,
      </if>
      <if test="examinationQuestionsAnswer != null" >
        EXAMINATION_QUESTIONS_ANSWER,
      </if>
      <if test="examinationSelect1 != null" >
        EXAMINATION_SELECT_1,
      </if>
      <if test="examinationSelect2 != null" >
        EXAMINATION_SELECT_2,
      </if>
      <if test="examinationSelect3 != null" >
        EXAMINATION_SELECT_3,
      </if>
      <if test="examinationSelect4 != null" >
        EXAMINATION_SELECT_4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examinationQuestionsId != null" >
        #{examinationQuestionsId,jdbcType=INTEGER},
      </if>
      <if test="examinationQuestionsContent != null" >
        #{examinationQuestionsContent,jdbcType=VARCHAR},
      </if>
      <if test="examinationQuestionsAnswer != null" >
        #{examinationQuestionsAnswer,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect1 != null" >
        #{examinationSelect1,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect2 != null" >
        #{examinationSelect2,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect3 != null" >
        #{examinationSelect3,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect4 != null" >
        #{examinationSelect4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinqi.exam.entity.ExaminationQuestionsExample" resultType="java.lang.Integer" >
    select count(*) from T_EXAMINATION_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_EXAMINATION_QUESTIONS
    <set >
      <if test="record.examinationQuestionsId != null" >
        EXAMINATION_QUESTIONS_ID = #{record.examinationQuestionsId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationQuestionsContent != null" >
        EXAMINATION_QUESTIONS_CONTENT = #{record.examinationQuestionsContent,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationQuestionsAnswer != null" >
        EXAMINATION_QUESTIONS_ANSWER = #{record.examinationQuestionsAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationSelect1 != null" >
        EXAMINATION_SELECT_1 = #{record.examinationSelect1,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationSelect2 != null" >
        EXAMINATION_SELECT_2 = #{record.examinationSelect2,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationSelect3 != null" >
        EXAMINATION_SELECT_3 = #{record.examinationSelect3,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationSelect4 != null" >
        EXAMINATION_SELECT_4 = #{record.examinationSelect4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_EXAMINATION_QUESTIONS
    set EXAMINATION_QUESTIONS_ID = #{record.examinationQuestionsId,jdbcType=INTEGER},
      EXAMINATION_QUESTIONS_CONTENT = #{record.examinationQuestionsContent,jdbcType=VARCHAR},
      EXAMINATION_QUESTIONS_ANSWER = #{record.examinationQuestionsAnswer,jdbcType=VARCHAR},
      EXAMINATION_SELECT_1 = #{record.examinationSelect1,jdbcType=VARCHAR},
      EXAMINATION_SELECT_2 = #{record.examinationSelect2,jdbcType=VARCHAR},
      EXAMINATION_SELECT_3 = #{record.examinationSelect3,jdbcType=VARCHAR},
      EXAMINATION_SELECT_4 = #{record.examinationSelect4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinqi.exam.entity.ExaminationQuestions" >
    update T_EXAMINATION_QUESTIONS
    <set >
      <if test="examinationQuestionsContent != null" >
        EXAMINATION_QUESTIONS_CONTENT = #{examinationQuestionsContent,jdbcType=VARCHAR},
      </if>
      <if test="examinationQuestionsAnswer != null" >
        EXAMINATION_QUESTIONS_ANSWER = #{examinationQuestionsAnswer,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect1 != null" >
        EXAMINATION_SELECT_1 = #{examinationSelect1,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect2 != null" >
        EXAMINATION_SELECT_2 = #{examinationSelect2,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect3 != null" >
        EXAMINATION_SELECT_3 = #{examinationSelect3,jdbcType=VARCHAR},
      </if>
      <if test="examinationSelect4 != null" >
        EXAMINATION_SELECT_4 = #{examinationSelect4,jdbcType=VARCHAR},
      </if>
    </set>
    where EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinqi.exam.entity.ExaminationQuestions" >
    update T_EXAMINATION_QUESTIONS
    set EXAMINATION_QUESTIONS_CONTENT = #{examinationQuestionsContent,jdbcType=VARCHAR},
      EXAMINATION_QUESTIONS_ANSWER = #{examinationQuestionsAnswer,jdbcType=VARCHAR},
      EXAMINATION_SELECT_1 = #{examinationSelect1,jdbcType=VARCHAR},
      EXAMINATION_SELECT_2 = #{examinationSelect2,jdbcType=VARCHAR},
      EXAMINATION_SELECT_3 = #{examinationSelect3,jdbcType=VARCHAR},
      EXAMINATION_SELECT_4 = #{examinationSelect4,jdbcType=VARCHAR}
    where EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.ExaminationQuestionsExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_EXAMINATION_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>