<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinqi.exam.dao.KnowledgeQuestionsMapper" >
  <resultMap id="BaseResultMap" type="com.jinqi.exam.entity.KnowledgeQuestions" >
    <id column="KNOWLEDGE_QUESTIONS_ID" property="knowledgeQuestionsId" jdbcType="INTEGER" />
    <result column="KNOWLEDGE_POINTS_ID" property="knowledgePointsId" jdbcType="INTEGER" />
    <result column="EXAMINATION_QUESTIONS_ID" property="examinationQuestionsId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    KNOWLEDGE_QUESTIONS_ID, KNOWLEDGE_POINTS_ID, EXAMINATION_QUESTIONS_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.KnowledgeQuestionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_KNOWLEDGE_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_KNOWLEDGE_QUESTIONS
    where KNOWLEDGE_QUESTIONS_ID = #{knowledgeQuestionsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_KNOWLEDGE_QUESTIONS
    where KNOWLEDGE_QUESTIONS_ID = #{knowledgeQuestionsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jinqi.exam.entity.KnowledgeQuestionsExample" >
    delete from T_KNOWLEDGE_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jinqi.exam.entity.KnowledgeQuestions" >
    insert into T_KNOWLEDGE_QUESTIONS (KNOWLEDGE_QUESTIONS_ID, KNOWLEDGE_POINTS_ID, 
      EXAMINATION_QUESTIONS_ID)
    values (#{knowledgeQuestionsId,jdbcType=INTEGER}, #{knowledgePointsId,jdbcType=INTEGER}, 
      #{examinationQuestionsId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jinqi.exam.entity.KnowledgeQuestions" >
    insert into T_KNOWLEDGE_QUESTIONS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="knowledgeQuestionsId != null" >
        KNOWLEDGE_QUESTIONS_ID,
      </if>
      <if test="knowledgePointsId != null" >
        KNOWLEDGE_POINTS_ID,
      </if>
      <if test="examinationQuestionsId != null" >
        EXAMINATION_QUESTIONS_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="knowledgeQuestionsId != null" >
        #{knowledgeQuestionsId,jdbcType=INTEGER},
      </if>
      <if test="knowledgePointsId != null" >
        #{knowledgePointsId,jdbcType=INTEGER},
      </if>
      <if test="examinationQuestionsId != null" >
        #{examinationQuestionsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinqi.exam.entity.KnowledgeQuestionsExample" resultType="java.lang.Integer" >
    select count(*) from T_KNOWLEDGE_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_KNOWLEDGE_QUESTIONS
    <set >
      <if test="record.knowledgeQuestionsId != null" >
        KNOWLEDGE_QUESTIONS_ID = #{record.knowledgeQuestionsId,jdbcType=INTEGER},
      </if>
      <if test="record.knowledgePointsId != null" >
        KNOWLEDGE_POINTS_ID = #{record.knowledgePointsId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationQuestionsId != null" >
        EXAMINATION_QUESTIONS_ID = #{record.examinationQuestionsId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_KNOWLEDGE_QUESTIONS
    set KNOWLEDGE_QUESTIONS_ID = #{record.knowledgeQuestionsId,jdbcType=INTEGER},
      KNOWLEDGE_POINTS_ID = #{record.knowledgePointsId,jdbcType=INTEGER},
      EXAMINATION_QUESTIONS_ID = #{record.examinationQuestionsId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinqi.exam.entity.KnowledgeQuestions" >
    update T_KNOWLEDGE_QUESTIONS
    <set >
      <if test="knowledgePointsId != null" >
        KNOWLEDGE_POINTS_ID = #{knowledgePointsId,jdbcType=INTEGER},
      </if>
      <if test="examinationQuestionsId != null" >
        EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER},
      </if>
    </set>
    where KNOWLEDGE_QUESTIONS_ID = #{knowledgeQuestionsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinqi.exam.entity.KnowledgeQuestions" >
    update T_KNOWLEDGE_QUESTIONS
    set KNOWLEDGE_POINTS_ID = #{knowledgePointsId,jdbcType=INTEGER},
      EXAMINATION_QUESTIONS_ID = #{examinationQuestionsId,jdbcType=INTEGER}
    where KNOWLEDGE_QUESTIONS_ID = #{knowledgeQuestionsId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.KnowledgeQuestionsExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_KNOWLEDGE_QUESTIONS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>