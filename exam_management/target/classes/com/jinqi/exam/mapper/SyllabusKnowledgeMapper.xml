<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinqi.exam.dao.SyllabusKnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.jinqi.exam.entity.SyllabusKnowledge" >
    <id column="syllabus_knowledge_id" property="syllabusKnowledgeId" jdbcType="INTEGER" />
    <result column="examination_syllabus_id" property="examinationSyllabusId" jdbcType="INTEGER" />
    <result column="knowledge_points_id" property="knowledgePointsId" jdbcType="INTEGER" />
    <association property="knowledgePoints" column="knowledge_points_id" select="com.jinqi.exam.dao.KnowledgePointsMapper.selectByKnowledgePointsId"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    syllabus_knowledge_id, examination_syllabus_id, knowledge_points_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.SyllabusKnowledgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_syllabus_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_syllabus_knowledge
    where syllabus_knowledge_id = #{syllabusKnowledgeId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByExaminationSyllabusId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
      syllabus_knowledge_id, examination_syllabus_id, knowledge_points_id
    from t_syllabus_knowledge
    where examination_syllabus_id = #{examinationSyllabusId}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_syllabus_knowledge
    where syllabus_knowledge_id = #{syllabusKnowledgeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jinqi.exam.entity.SyllabusKnowledgeExample" >
    delete from t_syllabus_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jinqi.exam.entity.SyllabusKnowledge" >
    insert into t_syllabus_knowledge (syllabus_knowledge_id, examination_syllabus_id, 
      knowledge_points_id)
    values (#{syllabusKnowledgeId,jdbcType=INTEGER}, #{examinationSyllabusId,jdbcType=INTEGER}, 
      #{knowledgePointsId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jinqi.exam.entity.SyllabusKnowledge" >
    insert into t_syllabus_knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="syllabusKnowledgeId != null" >
        syllabus_knowledge_id,
      </if>
      <if test="examinationSyllabusId != null" >
        examination_syllabus_id,
      </if>
      <if test="knowledgePointsId != null" >
        knowledge_points_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="syllabusKnowledgeId != null" >
        #{syllabusKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="examinationSyllabusId != null" >
        #{examinationSyllabusId,jdbcType=INTEGER},
      </if>
      <if test="knowledgePointsId != null" >
        #{knowledgePointsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinqi.exam.entity.SyllabusKnowledgeExample" resultType="java.lang.Integer" >
    select count(*) from t_syllabus_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_syllabus_knowledge
    <set >
      <if test="record.syllabusKnowledgeId != null" >
        syllabus_knowledge_id = #{record.syllabusKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationSyllabusId != null" >
        examination_syllabus_id = #{record.examinationSyllabusId,jdbcType=INTEGER},
      </if>
      <if test="record.knowledgePointsId != null" >
        knowledge_points_id = #{record.knowledgePointsId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_syllabus_knowledge
    set syllabus_knowledge_id = #{record.syllabusKnowledgeId,jdbcType=INTEGER},
      examination_syllabus_id = #{record.examinationSyllabusId,jdbcType=INTEGER},
      knowledge_points_id = #{record.knowledgePointsId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinqi.exam.entity.SyllabusKnowledge" >
    update t_syllabus_knowledge
    <set >
      <if test="examinationSyllabusId != null" >
        examination_syllabus_id = #{examinationSyllabusId,jdbcType=INTEGER},
      </if>
      <if test="knowledgePointsId != null" >
        knowledge_points_id = #{knowledgePointsId,jdbcType=INTEGER},
      </if>
    </set>
    where syllabus_knowledge_id = #{syllabusKnowledgeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinqi.exam.entity.SyllabusKnowledge" >
    update t_syllabus_knowledge
    set examination_syllabus_id = #{examinationSyllabusId,jdbcType=INTEGER},
      knowledge_points_id = #{knowledgePointsId,jdbcType=INTEGER}
    where syllabus_knowledge_id = #{syllabusKnowledgeId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.jinqi.exam.entity.SyllabusKnowledgeExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_syllabus_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>